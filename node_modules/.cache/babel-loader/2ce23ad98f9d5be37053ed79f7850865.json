{"ast":null,"code":"var _jsxFileName = \"/home/richardoshio/Downloads/Wapi/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Movie from './components/Movie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.dev/api/films/\").then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }, !isloading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 51\n    }\n  }, \"Found no movies.\"), !isloading && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 35\n    }\n  }, error), isloading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Loading...\")));\n}\n\nexport default App; // import React, { useState } from \"react\";\n// import MoviesList from \"./components/MoviesList\";\n// import \"./App.css\";\n// function App() {\n//   const [movies, setMovies] = useState([]);\n//   const [isloading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   setError(null);\n//   isloading(true);\n//   async function fetchMoviesHandler() {\n//     try {\n//       const response = await fetch(\"https://swapi.dev/api/films/\");\n//       const data = await response.json();\n//       if (!response.ok) {\n//         throw new Error(\"something went wrong\");\n//       }\n//       const transformedMovies = data.results.map((movieData) => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           openingText: movieData.opening_crawl,\n//           releaseDate: movieData.release_date,\n//         };\n//       });\n//       setMovies(transformedMovies);\n//       setIsLoading(false);\n//     } catch (error) {\n//       setError(error.message)\n//     }\n//     isloading(false);\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n//       </section>\n//       <section>\n//         {!isloading && movies.length > 0 && <MoviesList movies={movies} />}\n//         {!isloading && movies.length === 0 && <p>Found no movies.</p>}\n//         {!isloading && error && <p>{error}</p>}\n//         {isloading && <p>Loading...</p>}\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// }\n// export default App;","map":{"version":3,"names":["React","useState","MoviesList","Movie","App","movies","setMovies","fetchMoviesHandler","response","fetch","then","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","isloading","length","error"],"sources":["/home/richardoshio/Downloads/Wapi/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport Movie from './components/Movie';\n\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n\n    async function fetchMoviesHandler(){\n    const response = await fetch(\"https://swapi.dev/api/films/\").then(response =>{\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id:movieData.episode_id,\n          title: movieData.title,\n          openingText:movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      });\n     setMovies(transformedMovies);\n    })\n  }\n\n  return (\n        <React.Fragment>\n       <section>\n          <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n         </section>\n       <section>\n            {!isloading && movies.length === 0 && <p>Found no movies.</p>}\n          {!isloading && error && <p>{error}</p>}\n          {isloading && <p>Loading...</p>}\n        </section>\n       </React.Fragment>\n   );\n    }\n  \n    export default App;\n\n// import React, { useState } from \"react\";\n\n// import MoviesList from \"./components/MoviesList\";\n// import \"./App.css\";\n\n\n// function App() {\n//   const [movies, setMovies] = useState([]);\n//   const [isloading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   setError(null);\n//   isloading(true);\n//   async function fetchMoviesHandler() {\n//     try {\n//       const response = await fetch(\"https://swapi.dev/api/films/\");\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(\"something went wrong\");\n//       }\n\n//       const transformedMovies = data.results.map((movieData) => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           openingText: movieData.opening_crawl,\n//           releaseDate: movieData.release_date,\n//         };\n//       });\n//       setMovies(transformedMovies);\n//       setIsLoading(false);\n//     } catch (error) {\n//       setError(error.message)\n      \n//     }\n//     isloading(false);\n  \n\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n//       </section>\n//       <section>\n//         {!isloading && movies.length > 0 && <MoviesList movies={movies} />}\n//         {!isloading && movies.length === 0 && <p>Found no movies.</p>}\n//         {!isloading && error && <p>{error}</p>}\n//         {isloading && <p>Loading...</p>}\n//       </section>\n//     </React.Fragment>\n//   );\n// }\n// }\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,SAASC,GAAT,GAAe;EAEb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;EAEE,eAAeM,kBAAf,GAAmC;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA2CF,QAAQ,IAAG;MAC3E,OAAOA,QAAQ,CAACG,IAAT,EAAP;IACD,CAFsB,EAEpBD,IAFoB,CAEfE,IAAI,IAAI;MACd,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;QACtD,OAAO;UACLC,EAAE,EAACD,SAAS,CAACE,UADR;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAACJ,SAAS,CAACK,aAHjB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQDjB,SAAS,CAACO,iBAAD,CAAT;IACA,CAZsB,CAAvB;EAaD;;EAED,oBACM,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACG;IAAQ,OAAO,EAAEN,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADH,CADC,eAID;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACM,CAACiB,SAAD,IAAcnB,MAAM,CAACoB,MAAP,KAAkB,CAAhC,iBAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAD3C,EAEI,CAACD,SAAD,IAAcE,KAAd,iBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIA,KAAJ,CAF3B,EAGIF,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAHjB,CAJC,CADN;AAYG;;AAED,eAAepB,GAAf,C,CAEJ;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}